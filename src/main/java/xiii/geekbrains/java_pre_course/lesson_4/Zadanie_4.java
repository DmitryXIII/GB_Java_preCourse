package xiii.geekbrains.java_pre_course.lesson_4;
/*
1. Создать класс "Сотрудник" с полями: ФИО, должность, email, телефон, зарплата, возраст.
2. Конструктор класса должен заполнять эти поля при создании объекта.
3. Внутри класса «Сотрудник» написать метод, который выводит информацию об объекте в консоль.
4. Создать массив из 5 сотрудников.
        Пример:
        Person[] persArray = new Person[5]; // Вначале объявляем массив объектов
        persArray[0] = new Person("Ivanov Ivan", "Engineer", "ivivan@mailbox.com", "892312312", 30000, 30); // потом для каждой ячейки массива задаем объект
        persArray[1] = new Person(...);
        ...
        persArray[4] = new Person(...);
        С помощью цикла вывести информацию только о сотрудниках старше 40 лет.
5. Создать классы Собака и Кот с наследованием от класса Животное;
6. Животные могут выполнять действия: бежать, плыть, перепрыгивать препятствие.
   В качестве параметра каждому методу передается величина, означающая или длину препятствия (для бега и плавания),
   или высоту (для прыжков);
7. У каждого животного есть ограничения на действия (бег: кот – 200 м., собака – 500 м.; прыжок: кот – 2 м.,
   собака – 0.5 м.; плавание: кот не умеет плавать, собака – 10 м.);
8. При попытке животного выполнить одно из этих действий, оно должно сообщить результат в консоль.
   (Например, dog1.run(150); -> результат: run: true);
9. * Добавить животным разброс в ограничениях.
   То есть у одной собаки ограничение на бег может быть 400 м., у другой – 600 м
*/

public class Zadanie_4 {
    public static void main(String[] args) {

        Person[] personArray = new Person[5];
        personArray[0] = new Person("Иванов Иван Иванович", 42, "Директор", "ivanov@gmail.com", "89001234567", 100000);
        personArray[1] = new Person("Петров Петр Иванович", 24, "Младший научный сотрудник", "petrov@gmail.com", "89011234566", 15000);
        personArray[2] = new Person("Сидоров Иван Сидорович", 38, "Старший научный сотрудник", "sidorov@gmail.com", "89021234565", 30000);
        personArray[3] = new Person("Кузнецов Петр Иванович", 35, "Системный администратор", "kuznetcov@gmail.com", "89031234564", 70000);
        personArray[4] = new Person("Глушко Юрий Венедиктович", 51, "Заместитель директора", "glushko@gmail.com", "89041234563", 80000);
        for (int i = 0; i < personArray.length; i++) {
            if (personArray[i].getAge() > 39) {
                System.out.println("Сотрудник:");
                Person.printPerson(personArray[i]);
                System.out.println();
            }
        }

        Cat cat1 = new Cat("Мурзик");
        cat1.run(50);
        cat1.swim(50);
        cat1.jump(2);

        Dog dog1 = new Dog("Барбос");
        dog1.run(600);
        dog1.swim(1);
        dog1.jump(0.5);
    }
}





